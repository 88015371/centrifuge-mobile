// Objective-C API for talking to github.com/centrifugal/centrifuge-mobile Go package.
//   gobind -lang=objc github.com/centrifugal/centrifuge-mobile
//
// File is generated by gobind. Do not edit.

#ifndef __Centrifuge_H__
#define __Centrifuge_H__

@import Foundation;
#include "Universe.objc.h"


@class CentrifugeBackoffReconnect;
@class CentrifugeClient;
@class CentrifugeClientInfo;
@class CentrifugeConfig;
@class CentrifugeCredentials;
@class CentrifugeEventHandler;
@class CentrifugeMessage;
@class CentrifugePrivateRequest;
@class CentrifugePrivateSign;
@class CentrifugeSub;
@class CentrifugeSubEventHandler;
@protocol CentrifugeDisconnectHandler;
@class CentrifugeDisconnectHandler;
@protocol CentrifugeErrorHandler;
@class CentrifugeErrorHandler;
@protocol CentrifugeJoinHandler;
@class CentrifugeJoinHandler;
@protocol CentrifugeLeaveHandler;
@class CentrifugeLeaveHandler;
@protocol CentrifugeMessageHandler;
@class CentrifugeMessageHandler;
@protocol CentrifugePrivateSubHandler;
@class CentrifugePrivateSubHandler;
@protocol CentrifugeRefreshHandler;
@class CentrifugeRefreshHandler;
@protocol CentrifugeUnsubscribeHandler;
@class CentrifugeUnsubscribeHandler;

@interface CentrifugeBackoffReconnect : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (long)numReconnect;
- (void)setNumReconnect:(long)v;
- (double)factor;
- (void)setFactor:(double)v;
- (BOOL)jitter;
- (void)setJitter:(BOOL)v;
- (long)minMilliseconds;
- (void)setMinMilliseconds:(long)v;
- (long)maxMilliseconds;
- (void)setMaxMilliseconds:(long)v;
@end

@interface CentrifugeClient : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSString*)clientID;
- (void)close;
- (BOOL)connect:(NSError**)error;
- (BOOL)connected;
- (BOOL)reconnect:(CentrifugeBackoffReconnect*)strategy error:(NSError**)error;
- (CentrifugeSub*)subscribe:(NSString*)channel events:(CentrifugeSubEventHandler*)events error:(NSError**)error;
- (BOOL)subscribed:(NSString*)channel;
@end

@interface CentrifugeClientInfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSString*)user;
- (void)setUser:(NSString*)v;
- (NSString*)client;
- (void)setClient:(NSString*)v;
- (NSString*)defaultInfo;
- (void)setDefaultInfo:(NSString*)v;
- (NSString*)channelInfo;
- (void)setChannelInfo:(NSString*)v;
@end

@interface CentrifugeConfig : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (long)timeoutMilliseconds;
- (void)setTimeoutMilliseconds:(long)v;
- (NSString*)privateChannelPrefix;
- (void)setPrivateChannelPrefix:(NSString*)v;
- (BOOL)debug;
- (void)setDebug:(BOOL)v;
- (BOOL)reconnect;
- (void)setReconnect:(BOOL)v;
@end

@interface CentrifugeCredentials : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSString*)user;
- (void)setUser:(NSString*)v;
- (NSString*)timestamp;
- (void)setTimestamp:(NSString*)v;
- (NSString*)info;
- (void)setInfo:(NSString*)v;
- (NSString*)token;
- (void)setToken:(NSString*)v;
@end

@interface CentrifugeEventHandler : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (void)onDisconnect:(id<CentrifugeDisconnectHandler>)handler;
- (void)onError:(id<CentrifugeErrorHandler>)handler;
- (void)onPrivateSub:(id<CentrifugePrivateSubHandler>)handler;
- (void)onRefresh:(id<CentrifugeRefreshHandler>)handler;
@end

@interface CentrifugeMessage : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSString*)uid;
- (void)setUID:(NSString*)v;
- (CentrifugeClientInfo*)info;
- (void)setInfo:(CentrifugeClientInfo*)v;
- (NSString*)channel;
- (void)setChannel:(NSString*)v;
- (NSString*)data;
- (void)setData:(NSString*)v;
- (NSString*)client;
- (void)setClient:(NSString*)v;
@end

@interface CentrifugePrivateRequest : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSString*)clientID;
- (void)setClientID:(NSString*)v;
- (NSString*)channel;
- (void)setChannel:(NSString*)v;
@end

@interface CentrifugePrivateSign : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSString*)sign;
- (void)setSign:(NSString*)v;
- (NSString*)info;
- (void)setInfo:(NSString*)v;
@end

@interface CentrifugeSub : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (NSString*)channel;
// skipped method Sub.History with unsupported parameter or return types

// skipped method Sub.Presence with unsupported parameter or return types

- (BOOL)publish:(NSData*)data error:(NSError**)error;
- (BOOL)unsubscribe:(NSError**)error;
@end

@interface CentrifugeSubEventHandler : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) id _ref;

- (id)initWithRef:(id)ref;
- (void)onJoin:(id<CentrifugeJoinHandler>)handler;
- (void)onLeave:(id<CentrifugeLeaveHandler>)handler;
- (void)onMessage:(id<CentrifugeMessageHandler>)handler;
- (void)onUnsubscribe:(id<CentrifugeUnsubscribeHandler>)handler;
@end

@protocol CentrifugeDisconnectHandler <NSObject>
- (BOOL)onDisconnect:(CentrifugeClient*)p0 error:(NSError**)error;
@end

@protocol CentrifugeErrorHandler <NSObject>
- (void)onError:(CentrifugeClient*)p0 p1:(NSError*)p1;
@end

@protocol CentrifugeJoinHandler <NSObject>
- (BOOL)onJoin:(CentrifugeSub*)p0 p1:(CentrifugeClientInfo*)p1 error:(NSError**)error;
@end

@protocol CentrifugeLeaveHandler <NSObject>
- (BOOL)onLeave:(CentrifugeSub*)p0 p1:(CentrifugeClientInfo*)p1 error:(NSError**)error;
@end

@protocol CentrifugeMessageHandler <NSObject>
- (BOOL)onMessage:(CentrifugeSub*)p0 p1:(CentrifugeMessage*)p1 error:(NSError**)error;
@end

@protocol CentrifugePrivateSubHandler <NSObject>
- (CentrifugePrivateSign*)onPrivateSub:(CentrifugeClient*)p0 p1:(CentrifugePrivateRequest*)p1 error:(NSError**)error;
@end

@protocol CentrifugeRefreshHandler <NSObject>
- (CentrifugeCredentials*)onRefresh:(CentrifugeClient*)p0 error:(NSError**)error;
@end

@protocol CentrifugeUnsubscribeHandler <NSObject>
- (BOOL)onUnsubscribe:(CentrifugeSub*)p0 error:(NSError**)error;
@end

FOUNDATION_EXPORT const int64_t CentrifugeCLOSED;
FOUNDATION_EXPORT const int64_t CentrifugeCONNECTED;
FOUNDATION_EXPORT const int64_t CentrifugeDISCONNECTED;
FOUNDATION_EXPORT NSString* const CentrifugeDefaultPrivateChannelPrefix;
FOUNDATION_EXPORT const BOOL CentrifugeDefaultReconnect;
FOUNDATION_EXPORT const double CentrifugeDefaultTimeoutMilliseconds;
FOUNDATION_EXPORT const int64_t CentrifugeRECONNECTING;

@interface Centrifuge : NSObject
+ (CentrifugeBackoffReconnect*) defaultBackoffReconnect;
+ (void) setDefaultBackoffReconnect:(CentrifugeBackoffReconnect*)v;

+ (NSError*) errBadPublishStatus;
+ (void) setErrBadPublishStatus:(NSError*)v;

+ (NSError*) errBadSubscribeStatus;
+ (void) setErrBadSubscribeStatus:(NSError*)v;

+ (NSError*) errBadUnsubscribeStatus;
+ (void) setErrBadUnsubscribeStatus:(NSError*)v;

+ (NSError*) errClientDisconnected;
+ (void) setErrClientDisconnected:(NSError*)v;

+ (NSError*) errClientExpired;
+ (void) setErrClientExpired:(NSError*)v;

+ (NSError*) errClientStatus;
+ (void) setErrClientStatus:(NSError*)v;

+ (NSError*) errDuplicateWaiter;
+ (void) setErrDuplicateWaiter:(NSError*)v;

+ (NSError*) errInvalidMessage;
+ (void) setErrInvalidMessage:(NSError*)v;

+ (NSError*) errReconnectFailed;
+ (void) setErrReconnectFailed:(NSError*)v;

+ (NSError*) errReconnectForbidden;
+ (void) setErrReconnectForbidden:(NSError*)v;

+ (NSError*) errTimeout;
+ (void) setErrTimeout:(NSError*)v;

+ (NSError*) errWaiterClosed;
+ (void) setErrWaiterClosed:(NSError*)v;

@end

FOUNDATION_EXPORT CentrifugeConfig* CentrifugeDefaultConfig();

FOUNDATION_EXPORT CentrifugeClient* CentrifugeNew(NSString* u, CentrifugeCredentials* creds, CentrifugeEventHandler* events, CentrifugeConfig* config);

FOUNDATION_EXPORT CentrifugeCredentials* CentrifugeNewCredentials(NSString* user, NSString* timestamp, NSString* info, NSString* token);

FOUNDATION_EXPORT CentrifugeEventHandler* CentrifugeNewEventHandler();

FOUNDATION_EXPORT CentrifugeSubEventHandler* CentrifugeNewSubEventHandler();

FOUNDATION_EXPORT NSString* CentrifugeTimestamp();

@class CentrifugeDisconnectHandler;

@class CentrifugeErrorHandler;

@class CentrifugeJoinHandler;

@class CentrifugeLeaveHandler;

@class CentrifugeMessageHandler;

@class CentrifugePrivateSubHandler;

@class CentrifugeRefreshHandler;

@class CentrifugeUnsubscribeHandler;

@interface CentrifugeDisconnectHandler : NSObject <goSeqRefInterface, CentrifugeDisconnectHandler> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (BOOL)onDisconnect:(CentrifugeClient*)p0 error:(NSError**)error;
@end

@interface CentrifugeErrorHandler : NSObject <goSeqRefInterface, CentrifugeErrorHandler> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onError:(CentrifugeClient*)p0 p1:(NSError*)p1;
@end

@interface CentrifugeJoinHandler : NSObject <goSeqRefInterface, CentrifugeJoinHandler> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (BOOL)onJoin:(CentrifugeSub*)p0 p1:(CentrifugeClientInfo*)p1 error:(NSError**)error;
@end

@interface CentrifugeLeaveHandler : NSObject <goSeqRefInterface, CentrifugeLeaveHandler> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (BOOL)onLeave:(CentrifugeSub*)p0 p1:(CentrifugeClientInfo*)p1 error:(NSError**)error;
@end

@interface CentrifugeMessageHandler : NSObject <goSeqRefInterface, CentrifugeMessageHandler> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (BOOL)onMessage:(CentrifugeSub*)p0 p1:(CentrifugeMessage*)p1 error:(NSError**)error;
@end

@interface CentrifugePrivateSubHandler : NSObject <goSeqRefInterface, CentrifugePrivateSubHandler> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (CentrifugePrivateSign*)onPrivateSub:(CentrifugeClient*)p0 p1:(CentrifugePrivateRequest*)p1 error:(NSError**)error;
@end

@interface CentrifugeRefreshHandler : NSObject <goSeqRefInterface, CentrifugeRefreshHandler> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (CentrifugeCredentials*)onRefresh:(CentrifugeClient*)p0 error:(NSError**)error;
@end

@interface CentrifugeUnsubscribeHandler : NSObject <goSeqRefInterface, CentrifugeUnsubscribeHandler> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (BOOL)onUnsubscribe:(CentrifugeSub*)p0 error:(NSError**)error;
@end

#endif
